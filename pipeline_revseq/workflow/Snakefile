from snakemake.utils import min_version
from snakemake.utils import validate

# do not allow subdirectories as part of `sample` or `i` wildcards
wildcard_constraints:
    sample="[^/]+",

# Define minimum Snakemake version
min_version("6.12.1")

# Include Config file
configfile: "config/config.yaml"


# Include rules
include: "rules/misc_snake.smk"
include: "rules/preprocessing.smk"
include: "rules/dehuman.smk"
include: "rules/revseq_basic.smk"
include: "rules/qc.smk"

# include local rules
localrules:
    all,

# final rule of pipeline
# defines output
rule all:
    input:
        expand("results/{sample}/merge_lanes/merged_R1.fastq.gz", sample = sample_ids, lane = lane_ids),
        expand("results/{sample}/merge_lanes/merged_R2.fastq.gz", sample = sample_ids, lane = lane_ids),
        #expand("results/{sample}/bwa/mapped_reads.bam", sample = sample_ids),
        #expand("results/{sample}/sort/sorted_reads.bam", sample = sample_ids),
        expand("results/{sample}/pileup/pileup.txt", sample = sample_ids),
        #expand("results/{sample}/pair_freqs/pair_counts.pkl.gz", sample = sample_ids),
        #expand("results/{sample}/consensus/consensus.fasta", sample = sample_ids),
        expand("results/{sample}/filter_host_reads/{sample}_dehuman.cram", sample = sample_ids),
        expand("results/{sample}/fastqc/{sample}_L001_R1_001_fastqc.zip", sample = sample_ids),#, lane = lane_ids),
        expand("results/{sample}/samtoolsstats/samtools_stats.txt", sample=sample_ids),
        expand("results/{sample}/rseqc/{sample}.clip_profile.R1.pdf", sample=sample_ids),
        #results/multiqc/multiqc_report.html",
    output:
        "results/complete.txt",
    shell:
        "date > {output}"




