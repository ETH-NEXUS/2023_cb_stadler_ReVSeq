######
## Script name: add_consensus_info.py
## Date: May 2024
## Author: Matteo Carrara (NEXUS Personalized Health Technologies)
##
## Description: Part of the Revseq pipeline. Loads the assignment and the
## number of Ns in the consensus and outputs the final assignment table
## to upload to the database
######

import pandas as pd
import argparse

if __name__ == '__main__':
	# Parse input args
    parser = argparse.ArgumentParser(description='Add consensus N information to the final assignment table', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--assignment', required=True, type=str, help='The assignment table generated by rule assign_virus')
    parser.add_argument('--consensus_n', required=True, type=str, help='The information on the number of Ns in the consensus sequences')
    parser.add_argument('--output', required=True, type=str, help='The output assignment table')
    args = parser.parse_args()

    assignment = pd.read_table(args.assignment, dtype=str)
    count_n = pd.read_table(args.consensus_n)
    assignment["consensus_number_n"]=None
    assignment["consensus_fraction_n"]=None
    for i in assignment["name"].tolist():
        if i in count_n["name"].tolist():
            assignment.loc[assignment["name"] == i, "consensus_number_n"] = count_n["number_n"][count_n["name"] == i].to_string(index=False).strip()
            assignment.loc[assignment["name"] == i, "consensus_fraction_n"] = count_n["fraction_n"][count_n["name"] == i].to_string(index=False).strip()
    assignment.to_csv(args.output, sep="\t", float_format='%.2f', index=None)
    
    