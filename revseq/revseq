#!/bin/bash

## Date: July 2023
## Author: Matteo Carrara (NEXUS Personalized Health Technologies)
##
## Description: Main command interface for the revseq workflow.
## The subcommands allow to trigger: sync raw data from Viollier SFTP server,
## pseudoanonymize samples, start a snakemake dryrun or fullrun,
## upload results back to Viollier
## Commands "runpipeline" and "dryrun" require the plate on which to run as option

scriptdir="$(dirname $(which $0))"
. ${scriptdir}/revseq.conf

case "$1" in
        syncviollier)
                echo "Sync Viollier"
		cd ${mirror}
                # HACK delete previous partial downloads
                . <(grep '^mirror=' revseq.conf)
                echo "Removing partial files from:" "${mirror}/"
                find "${mirror}/" -type f -name '*.filepart' -print0 | xargs -r -0 rm -vi
		# Mirroring samples
                lftp -c "set cmd:move-background false; set net:timeout $(( contimeout / retries)); set net:max-retries ${retries}; set net:reconnect-interval-base 8; set xfer:timeout ${iotimeout}; connect sftp://${fileserver}${srvport:+:${srvport}}; mirror --continue --no-perms --parallel=${parallel} --loop --target-directory=${mirror}/ ${source}"
		# Mirroring metadata
		lftp -c "set cmd:move-background false; set net:timeout $(( contimeout / retries)); set net:max-retries ${retries}; set net:reconnect-interval-base 8; set xfer:timeout ${iotimeout}; connect sftp://${fileserver}${srvport:+:${srvport}}; mirror --continue --no-perms --parallel=${parallel} --loop --target-directory=${mirror}/ ${metadata}"
	;;
        #uploadviollier)
        #        echo "Uploading Viollier"
        #;;
        pseudoanonymize_samples)
                python ${scriptdir}/pseudoanonymize_sample_names.py --mirrordir ${sampledir} --pseudoanondir ${anonymizeddir} --metadatadir ${metadatadir}
        ;;
        dryrun)
		cd ${pipelinedir}
                for plate in $(ls /data/results/anonymized)
                do
                        if [ ! -f "/data/results/anonymized/${plate}/complete.txt" ]
                        then
		                snakemake --use-conda -c3 --configfile ${snakemake_config} --config plate=${plate} sample_map=/data/results/anonymized/${plate}/${plate}_samplemap.tsv -n
                        fi
                done
        ;;
        runpipeline)
		cd ${pipelinedir}
                for plate in $(ls /data/results/anonymized)
                do
                        if [ ! -f "/data/results/anonymized/${plate}/complete.txt" ]
                        then
                                snakemake --use-conda -c3 --configfile ${snakemake_config} --config plate=${plate} sample_map=/data/results/anonymized/${plate}/${plate}_samplemap.tsv
                        fi
                done
        ;;
        *)
                echo "Unkown sub-command ${1}" > /dev/stderr
                exit 2
        ;;
esac
